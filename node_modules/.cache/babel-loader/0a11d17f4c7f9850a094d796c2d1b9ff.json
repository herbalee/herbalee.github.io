{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n/**\n * React Google Analytics Module\n *\n * @package react-ga\n * @author  Adam Lofting <adam@mozillafoundation.org>\n *          Atul Varma <atul@mozillafoundation.org>\n */\n\n/**\n * Utilities\n */\n\n\nimport format from './utils/format';\nimport removeLeadingSlash from './utils/removeLeadingSlash';\nimport trim from './utils/trim';\nimport loadGA from './utils/loadGA';\nimport warn from './utils/console/warn';\nimport log from './utils/console/log';\nimport TestModeAPI from './utils/testModeAPI';\nimport UnboundOutboundLink from './components/OutboundLink';\nvar _debug = false;\nvar _titleCase = true;\nvar _testMode = false;\nvar _alwaysSendToDefaultTracker = true;\n\nvar internalGa = function internalGa() {\n  var _window;\n\n  if (_testMode) return TestModeAPI.ga.apply(TestModeAPI, arguments);\n  if (typeof window === 'undefined') return false;\n  if (!window.ga) return warn('ReactGA.initialize must be called first or GoogleAnalytics should be loaded manually');\n  return (_window = window).ga.apply(_window, arguments);\n};\n\nfunction _format(s) {\n  return format(s, _titleCase);\n}\n\nfunction _gaCommand(trackerNames) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var command = args[0];\n\n  if (typeof internalGa === 'function') {\n    if (typeof command !== 'string') {\n      warn('ga command must be a string');\n      return;\n    }\n\n    if (_alwaysSendToDefaultTracker || !Array.isArray(trackerNames)) internalGa.apply(void 0, args);\n\n    if (Array.isArray(trackerNames)) {\n      trackerNames.forEach(function (name) {\n        internalGa.apply(void 0, _toConsumableArray([\"\".concat(name, \".\").concat(command)].concat(args.slice(1))));\n      });\n    }\n  }\n}\n\nfunction _initialize(gaTrackingID, options) {\n  if (!gaTrackingID) {\n    warn('gaTrackingID is required in initialize()');\n    return;\n  }\n\n  if (options) {\n    if (options.debug && options.debug === true) {\n      _debug = true;\n    }\n\n    if (options.titleCase === false) {\n      _titleCase = false;\n    }\n  }\n\n  if (options && options.gaOptions) {\n    internalGa('create', gaTrackingID, options.gaOptions);\n  } else {\n    internalGa('create', gaTrackingID, 'auto');\n  }\n}\n\nexport function initialize(configsOrTrackingId, options) {\n  if (options && options.testMode === true) {\n    _testMode = true;\n  } else {\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    if (!options || options.standardImplementation !== true) loadGA(options);\n  }\n\n  _alwaysSendToDefaultTracker = options && typeof options.alwaysSendToDefaultTracker === 'boolean' ? options.alwaysSendToDefaultTracker : true;\n\n  if (Array.isArray(configsOrTrackingId)) {\n    configsOrTrackingId.forEach(function (config) {\n      if (_typeof(config) !== 'object') {\n        warn('All configs must be an object');\n        return;\n      }\n\n      _initialize(config.trackingId, config);\n    });\n  } else {\n    _initialize(configsOrTrackingId, options);\n  }\n\n  return true;\n}\n/**\n * ga:\n * Returns the original GA object.\n */\n\nexport function ga() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (args.length > 0) {\n    internalGa.apply(void 0, args);\n\n    if (_debug) {\n      log('called ga(\\'arguments\\');');\n      log(\"with arguments: \".concat(JSON.stringify(args)));\n    }\n  }\n\n  return window.ga;\n}\n/**\n * set:\n * GA tracker set method\n * @param {Object} fieldsObject - a field/value pair or a group of field/value pairs on the tracker\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function set(fieldsObject, trackerNames) {\n  if (!fieldsObject) {\n    warn('`fieldsObject` is required in .set()');\n    return;\n  }\n\n  if (_typeof(fieldsObject) !== 'object') {\n    warn('Expected `fieldsObject` arg to be an Object');\n    return;\n  }\n\n  if (Object.keys(fieldsObject).length === 0) {\n    warn('empty `fieldsObject` given to .set()');\n  }\n\n  _gaCommand(trackerNames, 'set', fieldsObject);\n\n  if (_debug) {\n    log('called ga(\\'set\\', fieldsObject);');\n    log(\"with fieldsObject: \".concat(JSON.stringify(fieldsObject)));\n  }\n}\n/**\n * send:\n * Clone of the low level `ga.send` method\n * WARNING: No validations will be applied to this\n * @param  {Object} fieldObject - field object for tracking different analytics\n * @param  {Array} trackerNames - trackers to send the command to\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function send(fieldObject, trackerNames) {\n  _gaCommand(trackerNames, 'send', fieldObject);\n\n  if (_debug) {\n    log('called ga(\\'send\\', fieldObject);');\n    log(\"with fieldObject: \".concat(JSON.stringify(fieldObject)));\n    log(\"with trackers: \".concat(JSON.stringify(trackerNames)));\n  }\n}\n/**\n * pageview:\n * Basic GA pageview tracking\n * @param  {String} path - the current page page e.g. '/about'\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n * @param {String} title - (optional) the page title e. g. 'My Website'\n */\n\nexport function pageview(rawPath, trackerNames, title) {\n  if (!rawPath) {\n    warn('path is required in .pageview()');\n    return;\n  }\n\n  var path = trim(rawPath);\n\n  if (path === '') {\n    warn('path cannot be an empty string in .pageview()');\n    return;\n  }\n\n  var extraFields = {};\n\n  if (title) {\n    extraFields.title = title;\n  }\n\n  if (typeof ga === 'function') {\n    _gaCommand(trackerNames, 'send', _objectSpread({\n      hitType: 'pageview',\n      page: path\n    }, extraFields));\n\n    if (_debug) {\n      log('called ga(\\'send\\', \\'pageview\\', path);');\n      var extraLog = '';\n\n      if (title) {\n        extraLog = \" and title: \".concat(title);\n      }\n\n      log(\"with path: \".concat(path).concat(extraLog));\n    }\n  }\n}\n/**\n * modalview:\n * a proxy to basic GA pageview tracking to consistently track\n * modal views that are an equivalent UX to a traditional pageview\n * @param  {String} modalName e.g. 'add-or-edit-club'\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function modalview(rawModalName, trackerNames) {\n  if (!rawModalName) {\n    warn('modalName is required in .modalview(modalName)');\n    return;\n  }\n\n  var modalName = removeLeadingSlash(trim(rawModalName));\n\n  if (modalName === '') {\n    warn('modalName cannot be an empty string or a single / in .modalview()');\n    return;\n  }\n\n  if (typeof ga === 'function') {\n    var path = \"/modal/\".concat(modalName);\n\n    _gaCommand(trackerNames, 'send', 'pageview', path);\n\n    if (_debug) {\n      log('called ga(\\'send\\', \\'pageview\\', path);');\n      log(\"with path: \".concat(path));\n    }\n  }\n}\n/**\n * timing:\n * GA timing\n * @param args.category {String} required\n * @param args.variable {String} required\n * @param args.value  {Int}  required\n * @param args.label  {String} required\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function timing() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      category = _ref.category,\n      variable = _ref.variable,\n      value = _ref.value,\n      label = _ref.label;\n\n  var trackerNames = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (typeof ga === 'function') {\n    if (!category || !variable || !value || typeof value !== 'number') {\n      warn('args.category, args.variable ' + 'AND args.value are required in timing() ' + 'AND args.value has to be a number');\n      return;\n    } // Required Fields\n\n\n    var fieldObject = {\n      hitType: 'timing',\n      timingCategory: _format(category),\n      timingVar: _format(variable),\n      timingValue: value\n    };\n\n    if (label) {\n      fieldObject.timingLabel = _format(label);\n    }\n\n    send(fieldObject, trackerNames);\n  }\n}\n/**\n * event:\n * GA event tracking\n * @param args.category {String} required\n * @param args.action {String} required\n * @param args.label {String} optional\n * @param args.value {Int} optional\n * @param args.nonInteraction {boolean} optional\n * @param args.transport {string} optional\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function event() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      category = _ref2.category,\n      action = _ref2.action,\n      label = _ref2.label,\n      value = _ref2.value,\n      nonInteraction = _ref2.nonInteraction,\n      transport = _ref2.transport,\n      args = _objectWithoutProperties(_ref2, [\"category\", \"action\", \"label\", \"value\", \"nonInteraction\", \"transport\"]);\n\n  var trackerNames = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (typeof ga === 'function') {\n    // Simple Validation\n    if (!category || !action) {\n      warn('args.category AND args.action are required in event()');\n      return;\n    } // Required Fields\n\n\n    var fieldObject = {\n      hitType: 'event',\n      eventCategory: _format(category),\n      eventAction: _format(action)\n    }; // Optional Fields\n\n    if (label) {\n      fieldObject.eventLabel = _format(label);\n    }\n\n    if (typeof value !== 'undefined') {\n      if (typeof value !== 'number') {\n        warn('Expected `args.value` arg to be a Number.');\n      } else {\n        fieldObject.eventValue = value;\n      }\n    }\n\n    if (typeof nonInteraction !== 'undefined') {\n      if (typeof nonInteraction !== 'boolean') {\n        warn('`args.nonInteraction` must be a boolean.');\n      } else {\n        fieldObject.nonInteraction = nonInteraction;\n      }\n    }\n\n    if (typeof transport !== 'undefined') {\n      if (typeof transport !== 'string') {\n        warn('`args.transport` must be a string.');\n      } else {\n        if (['beacon', 'xhr', 'image'].indexOf(transport) === -1) {\n          warn('`args.transport` must be either one of these values: `beacon`, `xhr` or `image`');\n        }\n\n        fieldObject.transport = transport;\n      }\n    }\n\n    Object.keys(args).filter(function (key) {\n      return key.substr(0, 'dimension'.length) === 'dimension';\n    }).forEach(function (key) {\n      fieldObject[key] = args[key];\n    });\n    Object.keys(args).filter(function (key) {\n      return key.substr(0, 'metric'.length) === 'metric';\n    }).forEach(function (key) {\n      fieldObject[key] = args[key];\n    }); // Send to GA\n\n    send(fieldObject, trackerNames);\n  }\n}\n/**\n * exception:\n * GA exception tracking\n * @param args.description {String} optional\n * @param args.fatal {boolean} optional\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function exception(_ref3, trackerNames) {\n  var description = _ref3.description,\n      fatal = _ref3.fatal;\n\n  if (typeof ga === 'function') {\n    // Required Fields\n    var fieldObject = {\n      hitType: 'exception'\n    }; // Optional Fields\n\n    if (description) {\n      fieldObject.exDescription = _format(description);\n    }\n\n    if (typeof fatal !== 'undefined') {\n      if (typeof fatal !== 'boolean') {\n        warn('`args.fatal` must be a boolean.');\n      } else {\n        fieldObject.exFatal = fatal;\n      }\n    } // Send to GA\n\n\n    send(fieldObject, trackerNames);\n  }\n}\nexport var plugin = {\n  /**\n   * require:\n   * GA requires a plugin\n   * @param name {String} e.g. 'ecommerce' or 'myplugin'\n   * @param options {Object} optional e.g {path: '/log', debug: true}\n   */\n  require: function require(rawName, options) {\n    if (typeof ga === 'function') {\n      // Required Fields\n      if (!rawName) {\n        warn('`name` is required in .require()');\n        return;\n      }\n\n      var name = trim(rawName);\n\n      if (name === '') {\n        warn('`name` cannot be an empty string in .require()');\n        return;\n      } // Optional Fields\n\n\n      if (options) {\n        if (_typeof(options) !== 'object') {\n          warn('Expected `options` arg to be an Object');\n          return;\n        }\n\n        if (Object.keys(options).length === 0) {\n          warn('Empty `options` given to .require()');\n        }\n\n        ga('require', name, options);\n\n        if (_debug) {\n          log(\"called ga('require', '\".concat(name, \"', \").concat(JSON.stringify(options)));\n        }\n      } else {\n        ga('require', name);\n\n        if (_debug) {\n          log(\"called ga('require', '\".concat(name, \"');\"));\n        }\n      }\n    }\n  },\n\n  /**\n   * execute:\n   * GA execute action for plugin\n   * Takes variable number of arguments\n   * @param pluginName {String} e.g. 'ecommerce' or 'myplugin'\n   * @param action {String} e.g. 'addItem' or 'myCustomAction'\n   * @param actionType {String} optional e.g. 'detail'\n   * @param payload {Object} optional e.g { id: '1x5e', name : 'My product to track' }\n   */\n  execute: function execute(pluginName, action) {\n    var payload;\n    var actionType;\n\n    if ((arguments.length <= 2 ? 0 : arguments.length - 2) === 1) {\n      payload = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      actionType = arguments.length <= 2 ? undefined : arguments[2];\n      payload = arguments.length <= 3 ? undefined : arguments[3];\n    }\n\n    if (typeof ga === 'function') {\n      if (typeof pluginName !== 'string') {\n        warn('Expected `pluginName` arg to be a String.');\n      } else if (typeof action !== 'string') {\n        warn('Expected `action` arg to be a String.');\n      } else {\n        var command = \"\".concat(pluginName, \":\").concat(action);\n        payload = payload || null;\n\n        if (actionType && payload) {\n          ga(command, actionType, payload);\n\n          if (_debug) {\n            log(\"called ga('\".concat(command, \"');\"));\n            log(\"actionType: \\\"\".concat(actionType, \"\\\" with payload: \").concat(JSON.stringify(payload)));\n          }\n        } else if (payload) {\n          ga(command, payload);\n\n          if (_debug) {\n            log(\"called ga('\".concat(command, \"');\"));\n            log(\"with payload: \".concat(JSON.stringify(payload)));\n          }\n        } else {\n          ga(command);\n\n          if (_debug) {\n            log(\"called ga('\".concat(command, \"');\"));\n          }\n        }\n      }\n    }\n  }\n};\n/**\n * outboundLink:\n * GA outboundLink tracking\n * @param args.label {String} e.g. url, or 'Create an Account'\n * @param {function} hitCallback - Called after processing a hit.\n */\n\nexport function outboundLink(args, hitCallback, trackerNames) {\n  if (typeof hitCallback !== 'function') {\n    warn('hitCallback function is required');\n    return;\n  }\n\n  if (typeof ga === 'function') {\n    // Simple Validation\n    if (!args || !args.label) {\n      warn('args.label is required in outboundLink()');\n      return;\n    } // Required Fields\n\n\n    var fieldObject = {\n      hitType: 'event',\n      eventCategory: 'Outbound',\n      eventAction: 'Click',\n      eventLabel: _format(args.label)\n    };\n    var safetyCallbackCalled = false;\n\n    var safetyCallback = function safetyCallback() {\n      // This prevents a delayed response from GA\n      // causing hitCallback from being fired twice\n      safetyCallbackCalled = true;\n      hitCallback();\n    }; // Using a timeout to ensure the execution of critical application code\n    // in the case when the GA server might be down\n    // or an ad blocker prevents sending the data\n    // register safety net timeout:\n\n\n    var t = setTimeout(safetyCallback, 250);\n\n    var clearableCallbackForGA = function clearableCallbackForGA() {\n      clearTimeout(t);\n\n      if (!safetyCallbackCalled) {\n        hitCallback();\n      }\n    };\n\n    fieldObject.hitCallback = clearableCallbackForGA; // Send to GA\n\n    send(fieldObject, trackerNames);\n  } else {\n    // if ga is not defined, return the callback so the application\n    // continues to work as expected\n    setTimeout(hitCallback, 0);\n  }\n}\nUnboundOutboundLink.origTrackLink = UnboundOutboundLink.trackLink;\nUnboundOutboundLink.trackLink = outboundLink;\nexport var OutboundLink = UnboundOutboundLink;\nexport var testModeAPI = TestModeAPI;\nexport default {\n  initialize: initialize,\n  ga: ga,\n  set: set,\n  send: send,\n  pageview: pageview,\n  modalview: modalview,\n  timing: timing,\n  event: event,\n  exception: exception,\n  plugin: plugin,\n  outboundLink: outboundLink,\n  OutboundLink: OutboundLink,\n  testModeAPI: TestModeAPI\n};","map":{"version":3,"sources":["/home/dhruva/Desktop/foodin.github.io/node_modules/react-ga/dist/esm/index.js"],"names":["_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","_objectSpread","arguments","ownKeys","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","_defineProperty","obj","value","defineProperty","configurable","writable","_typeof","Symbol","iterator","constructor","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","toString","Array","from","isArray","arr2","format","removeLeadingSlash","trim","loadGA","warn","log","TestModeAPI","UnboundOutboundLink","_debug","_titleCase","_testMode","_alwaysSendToDefaultTracker","internalGa","_window","ga","apply","window","_format","s","_gaCommand","trackerNames","_len","args","_key","command","name","slice","_initialize","gaTrackingID","options","debug","titleCase","gaOptions","initialize","configsOrTrackingId","testMode","standardImplementation","alwaysSendToDefaultTracker","config","trackingId","_len2","_key2","JSON","stringify","set","fieldsObject","send","fieldObject","pageview","rawPath","title","path","extraFields","hitType","page","extraLog","modalview","rawModalName","modalName","timing","_ref","undefined","category","variable","label","timingCategory","timingVar","timingValue","timingLabel","event","_ref2","action","nonInteraction","transport","eventCategory","eventAction","eventLabel","eventValue","substr","exception","_ref3","description","fatal","exDescription","exFatal","plugin","require","rawName","execute","pluginName","payload","actionType","outboundLink","hitCallback","safetyCallbackCalled","safetyCallback","t","setTimeout","clearableCallbackForGA","clearTimeout","origTrackLink","trackLink","OutboundLink","testModeAPI"],"mappings":"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","sourcesContent":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * React Google Analytics Module\n *\n * @package react-ga\n * @author  Adam Lofting <adam@mozillafoundation.org>\n *          Atul Varma <atul@mozillafoundation.org>\n */\n\n/**\n * Utilities\n */\nimport format from './utils/format';\nimport removeLeadingSlash from './utils/removeLeadingSlash';\nimport trim from './utils/trim';\nimport loadGA from './utils/loadGA';\nimport warn from './utils/console/warn';\nimport log from './utils/console/log';\nimport TestModeAPI from './utils/testModeAPI';\nimport UnboundOutboundLink from './components/OutboundLink';\nvar _debug = false;\nvar _titleCase = true;\nvar _testMode = false;\nvar _alwaysSendToDefaultTracker = true;\n\nvar internalGa = function internalGa() {\n  var _window;\n\n  if (_testMode) return TestModeAPI.ga.apply(TestModeAPI, arguments);\n  if (typeof window === 'undefined') return false;\n  if (!window.ga) return warn('ReactGA.initialize must be called first or GoogleAnalytics should be loaded manually');\n  return (_window = window).ga.apply(_window, arguments);\n};\n\nfunction _format(s) {\n  return format(s, _titleCase);\n}\n\nfunction _gaCommand(trackerNames) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var command = args[0];\n\n  if (typeof internalGa === 'function') {\n    if (typeof command !== 'string') {\n      warn('ga command must be a string');\n      return;\n    }\n\n    if (_alwaysSendToDefaultTracker || !Array.isArray(trackerNames)) internalGa.apply(void 0, args);\n\n    if (Array.isArray(trackerNames)) {\n      trackerNames.forEach(function (name) {\n        internalGa.apply(void 0, _toConsumableArray([\"\".concat(name, \".\").concat(command)].concat(args.slice(1))));\n      });\n    }\n  }\n}\n\nfunction _initialize(gaTrackingID, options) {\n  if (!gaTrackingID) {\n    warn('gaTrackingID is required in initialize()');\n    return;\n  }\n\n  if (options) {\n    if (options.debug && options.debug === true) {\n      _debug = true;\n    }\n\n    if (options.titleCase === false) {\n      _titleCase = false;\n    }\n  }\n\n  if (options && options.gaOptions) {\n    internalGa('create', gaTrackingID, options.gaOptions);\n  } else {\n    internalGa('create', gaTrackingID, 'auto');\n  }\n}\n\nexport function initialize(configsOrTrackingId, options) {\n  if (options && options.testMode === true) {\n    _testMode = true;\n  } else {\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    if (!options || options.standardImplementation !== true) loadGA(options);\n  }\n\n  _alwaysSendToDefaultTracker = options && typeof options.alwaysSendToDefaultTracker === 'boolean' ? options.alwaysSendToDefaultTracker : true;\n\n  if (Array.isArray(configsOrTrackingId)) {\n    configsOrTrackingId.forEach(function (config) {\n      if (_typeof(config) !== 'object') {\n        warn('All configs must be an object');\n        return;\n      }\n\n      _initialize(config.trackingId, config);\n    });\n  } else {\n    _initialize(configsOrTrackingId, options);\n  }\n\n  return true;\n}\n/**\n * ga:\n * Returns the original GA object.\n */\n\nexport function ga() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (args.length > 0) {\n    internalGa.apply(void 0, args);\n\n    if (_debug) {\n      log('called ga(\\'arguments\\');');\n      log(\"with arguments: \".concat(JSON.stringify(args)));\n    }\n  }\n\n  return window.ga;\n}\n/**\n * set:\n * GA tracker set method\n * @param {Object} fieldsObject - a field/value pair or a group of field/value pairs on the tracker\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function set(fieldsObject, trackerNames) {\n  if (!fieldsObject) {\n    warn('`fieldsObject` is required in .set()');\n    return;\n  }\n\n  if (_typeof(fieldsObject) !== 'object') {\n    warn('Expected `fieldsObject` arg to be an Object');\n    return;\n  }\n\n  if (Object.keys(fieldsObject).length === 0) {\n    warn('empty `fieldsObject` given to .set()');\n  }\n\n  _gaCommand(trackerNames, 'set', fieldsObject);\n\n  if (_debug) {\n    log('called ga(\\'set\\', fieldsObject);');\n    log(\"with fieldsObject: \".concat(JSON.stringify(fieldsObject)));\n  }\n}\n/**\n * send:\n * Clone of the low level `ga.send` method\n * WARNING: No validations will be applied to this\n * @param  {Object} fieldObject - field object for tracking different analytics\n * @param  {Array} trackerNames - trackers to send the command to\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function send(fieldObject, trackerNames) {\n  _gaCommand(trackerNames, 'send', fieldObject);\n\n  if (_debug) {\n    log('called ga(\\'send\\', fieldObject);');\n    log(\"with fieldObject: \".concat(JSON.stringify(fieldObject)));\n    log(\"with trackers: \".concat(JSON.stringify(trackerNames)));\n  }\n}\n/**\n * pageview:\n * Basic GA pageview tracking\n * @param  {String} path - the current page page e.g. '/about'\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n * @param {String} title - (optional) the page title e. g. 'My Website'\n */\n\nexport function pageview(rawPath, trackerNames, title) {\n  if (!rawPath) {\n    warn('path is required in .pageview()');\n    return;\n  }\n\n  var path = trim(rawPath);\n\n  if (path === '') {\n    warn('path cannot be an empty string in .pageview()');\n    return;\n  }\n\n  var extraFields = {};\n\n  if (title) {\n    extraFields.title = title;\n  }\n\n  if (typeof ga === 'function') {\n    _gaCommand(trackerNames, 'send', _objectSpread({\n      hitType: 'pageview',\n      page: path\n    }, extraFields));\n\n    if (_debug) {\n      log('called ga(\\'send\\', \\'pageview\\', path);');\n      var extraLog = '';\n\n      if (title) {\n        extraLog = \" and title: \".concat(title);\n      }\n\n      log(\"with path: \".concat(path).concat(extraLog));\n    }\n  }\n}\n/**\n * modalview:\n * a proxy to basic GA pageview tracking to consistently track\n * modal views that are an equivalent UX to a traditional pageview\n * @param  {String} modalName e.g. 'add-or-edit-club'\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function modalview(rawModalName, trackerNames) {\n  if (!rawModalName) {\n    warn('modalName is required in .modalview(modalName)');\n    return;\n  }\n\n  var modalName = removeLeadingSlash(trim(rawModalName));\n\n  if (modalName === '') {\n    warn('modalName cannot be an empty string or a single / in .modalview()');\n    return;\n  }\n\n  if (typeof ga === 'function') {\n    var path = \"/modal/\".concat(modalName);\n\n    _gaCommand(trackerNames, 'send', 'pageview', path);\n\n    if (_debug) {\n      log('called ga(\\'send\\', \\'pageview\\', path);');\n      log(\"with path: \".concat(path));\n    }\n  }\n}\n/**\n * timing:\n * GA timing\n * @param args.category {String} required\n * @param args.variable {String} required\n * @param args.value  {Int}  required\n * @param args.label  {String} required\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function timing() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      category = _ref.category,\n      variable = _ref.variable,\n      value = _ref.value,\n      label = _ref.label;\n\n  var trackerNames = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (typeof ga === 'function') {\n    if (!category || !variable || !value || typeof value !== 'number') {\n      warn('args.category, args.variable ' + 'AND args.value are required in timing() ' + 'AND args.value has to be a number');\n      return;\n    } // Required Fields\n\n\n    var fieldObject = {\n      hitType: 'timing',\n      timingCategory: _format(category),\n      timingVar: _format(variable),\n      timingValue: value\n    };\n\n    if (label) {\n      fieldObject.timingLabel = _format(label);\n    }\n\n    send(fieldObject, trackerNames);\n  }\n}\n/**\n * event:\n * GA event tracking\n * @param args.category {String} required\n * @param args.action {String} required\n * @param args.label {String} optional\n * @param args.value {Int} optional\n * @param args.nonInteraction {boolean} optional\n * @param args.transport {string} optional\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function event() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      category = _ref2.category,\n      action = _ref2.action,\n      label = _ref2.label,\n      value = _ref2.value,\n      nonInteraction = _ref2.nonInteraction,\n      transport = _ref2.transport,\n      args = _objectWithoutProperties(_ref2, [\"category\", \"action\", \"label\", \"value\", \"nonInteraction\", \"transport\"]);\n\n  var trackerNames = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (typeof ga === 'function') {\n    // Simple Validation\n    if (!category || !action) {\n      warn('args.category AND args.action are required in event()');\n      return;\n    } // Required Fields\n\n\n    var fieldObject = {\n      hitType: 'event',\n      eventCategory: _format(category),\n      eventAction: _format(action)\n    }; // Optional Fields\n\n    if (label) {\n      fieldObject.eventLabel = _format(label);\n    }\n\n    if (typeof value !== 'undefined') {\n      if (typeof value !== 'number') {\n        warn('Expected `args.value` arg to be a Number.');\n      } else {\n        fieldObject.eventValue = value;\n      }\n    }\n\n    if (typeof nonInteraction !== 'undefined') {\n      if (typeof nonInteraction !== 'boolean') {\n        warn('`args.nonInteraction` must be a boolean.');\n      } else {\n        fieldObject.nonInteraction = nonInteraction;\n      }\n    }\n\n    if (typeof transport !== 'undefined') {\n      if (typeof transport !== 'string') {\n        warn('`args.transport` must be a string.');\n      } else {\n        if (['beacon', 'xhr', 'image'].indexOf(transport) === -1) {\n          warn('`args.transport` must be either one of these values: `beacon`, `xhr` or `image`');\n        }\n\n        fieldObject.transport = transport;\n      }\n    }\n\n    Object.keys(args).filter(function (key) {\n      return key.substr(0, 'dimension'.length) === 'dimension';\n    }).forEach(function (key) {\n      fieldObject[key] = args[key];\n    });\n    Object.keys(args).filter(function (key) {\n      return key.substr(0, 'metric'.length) === 'metric';\n    }).forEach(function (key) {\n      fieldObject[key] = args[key];\n    }); // Send to GA\n\n    send(fieldObject, trackerNames);\n  }\n}\n/**\n * exception:\n * GA exception tracking\n * @param args.description {String} optional\n * @param args.fatal {boolean} optional\n * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on\n */\n\nexport function exception(_ref3, trackerNames) {\n  var description = _ref3.description,\n      fatal = _ref3.fatal;\n\n  if (typeof ga === 'function') {\n    // Required Fields\n    var fieldObject = {\n      hitType: 'exception'\n    }; // Optional Fields\n\n    if (description) {\n      fieldObject.exDescription = _format(description);\n    }\n\n    if (typeof fatal !== 'undefined') {\n      if (typeof fatal !== 'boolean') {\n        warn('`args.fatal` must be a boolean.');\n      } else {\n        fieldObject.exFatal = fatal;\n      }\n    } // Send to GA\n\n\n    send(fieldObject, trackerNames);\n  }\n}\nexport var plugin = {\n  /**\n   * require:\n   * GA requires a plugin\n   * @param name {String} e.g. 'ecommerce' or 'myplugin'\n   * @param options {Object} optional e.g {path: '/log', debug: true}\n   */\n  require: function require(rawName, options) {\n    if (typeof ga === 'function') {\n      // Required Fields\n      if (!rawName) {\n        warn('`name` is required in .require()');\n        return;\n      }\n\n      var name = trim(rawName);\n\n      if (name === '') {\n        warn('`name` cannot be an empty string in .require()');\n        return;\n      } // Optional Fields\n\n\n      if (options) {\n        if (_typeof(options) !== 'object') {\n          warn('Expected `options` arg to be an Object');\n          return;\n        }\n\n        if (Object.keys(options).length === 0) {\n          warn('Empty `options` given to .require()');\n        }\n\n        ga('require', name, options);\n\n        if (_debug) {\n          log(\"called ga('require', '\".concat(name, \"', \").concat(JSON.stringify(options)));\n        }\n      } else {\n        ga('require', name);\n\n        if (_debug) {\n          log(\"called ga('require', '\".concat(name, \"');\"));\n        }\n      }\n    }\n  },\n\n  /**\n   * execute:\n   * GA execute action for plugin\n   * Takes variable number of arguments\n   * @param pluginName {String} e.g. 'ecommerce' or 'myplugin'\n   * @param action {String} e.g. 'addItem' or 'myCustomAction'\n   * @param actionType {String} optional e.g. 'detail'\n   * @param payload {Object} optional e.g { id: '1x5e', name : 'My product to track' }\n   */\n  execute: function execute(pluginName, action) {\n    var payload;\n    var actionType;\n\n    if ((arguments.length <= 2 ? 0 : arguments.length - 2) === 1) {\n      payload = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      actionType = arguments.length <= 2 ? undefined : arguments[2];\n      payload = arguments.length <= 3 ? undefined : arguments[3];\n    }\n\n    if (typeof ga === 'function') {\n      if (typeof pluginName !== 'string') {\n        warn('Expected `pluginName` arg to be a String.');\n      } else if (typeof action !== 'string') {\n        warn('Expected `action` arg to be a String.');\n      } else {\n        var command = \"\".concat(pluginName, \":\").concat(action);\n        payload = payload || null;\n\n        if (actionType && payload) {\n          ga(command, actionType, payload);\n\n          if (_debug) {\n            log(\"called ga('\".concat(command, \"');\"));\n            log(\"actionType: \\\"\".concat(actionType, \"\\\" with payload: \").concat(JSON.stringify(payload)));\n          }\n        } else if (payload) {\n          ga(command, payload);\n\n          if (_debug) {\n            log(\"called ga('\".concat(command, \"');\"));\n            log(\"with payload: \".concat(JSON.stringify(payload)));\n          }\n        } else {\n          ga(command);\n\n          if (_debug) {\n            log(\"called ga('\".concat(command, \"');\"));\n          }\n        }\n      }\n    }\n  }\n};\n/**\n * outboundLink:\n * GA outboundLink tracking\n * @param args.label {String} e.g. url, or 'Create an Account'\n * @param {function} hitCallback - Called after processing a hit.\n */\n\nexport function outboundLink(args, hitCallback, trackerNames) {\n  if (typeof hitCallback !== 'function') {\n    warn('hitCallback function is required');\n    return;\n  }\n\n  if (typeof ga === 'function') {\n    // Simple Validation\n    if (!args || !args.label) {\n      warn('args.label is required in outboundLink()');\n      return;\n    } // Required Fields\n\n\n    var fieldObject = {\n      hitType: 'event',\n      eventCategory: 'Outbound',\n      eventAction: 'Click',\n      eventLabel: _format(args.label)\n    };\n    var safetyCallbackCalled = false;\n\n    var safetyCallback = function safetyCallback() {\n      // This prevents a delayed response from GA\n      // causing hitCallback from being fired twice\n      safetyCallbackCalled = true;\n      hitCallback();\n    }; // Using a timeout to ensure the execution of critical application code\n    // in the case when the GA server might be down\n    // or an ad blocker prevents sending the data\n    // register safety net timeout:\n\n\n    var t = setTimeout(safetyCallback, 250);\n\n    var clearableCallbackForGA = function clearableCallbackForGA() {\n      clearTimeout(t);\n\n      if (!safetyCallbackCalled) {\n        hitCallback();\n      }\n    };\n\n    fieldObject.hitCallback = clearableCallbackForGA; // Send to GA\n\n    send(fieldObject, trackerNames);\n  } else {\n    // if ga is not defined, return the callback so the application\n    // continues to work as expected\n    setTimeout(hitCallback, 0);\n  }\n}\nUnboundOutboundLink.origTrackLink = UnboundOutboundLink.trackLink;\nUnboundOutboundLink.trackLink = outboundLink;\nexport var OutboundLink = UnboundOutboundLink;\nexport var testModeAPI = TestModeAPI;\nexport default {\n  initialize: initialize,\n  ga: ga,\n  set: set,\n  send: send,\n  pageview: pageview,\n  modalview: modalview,\n  timing: timing,\n  event: event,\n  exception: exception,\n  plugin: plugin,\n  outboundLink: outboundLink,\n  OutboundLink: OutboundLink,\n  testModeAPI: TestModeAPI\n};"]},"metadata":{},"sourceType":"module"}